grammar Codiphi
  include Formula

  rule codex
    space?
    declaration_list:declaration_list?
    space?
    list:list?
    space? <CodexNode>
  end

  rule list
    type:"list"
    space?
    declaration_block
    <ListNode>
  end

  rule assertion
    assertion_operator
    space
    integer
    space
    type:word
    space
    name:(name / option_list)
    <AssertionNode>
  end

  rule assertion_operator
    "expects"
    / "permits"
    <LiteralNode>
  end

  rule declaration
    type:word
    space
    name
    space?
    declaration_block:declaration_block?
    <DeclarationNode>
  end

  rule declaration_block
    "{"
    space*
    declaration_list
    space*
    "}"
    <DeclarationBlockNode>
  end

  rule declaration_list
    declaration:(assertion / declaration / cost_measure_assignment / cost_assignment / assignment / conditional)
    space?
    declaration_list:declaration_list?
    <DeclarationListNode>
  end

  rule assignment
    assignment_operator
    space
    type:word
    space
    value:(name / integer / word / string / option_list)
    <AssignmentNode>
  end

  rule option_list
    '[' space? name (space name)* space? ']'
  end

  rule cost_measure_assignment
    assignment_operator
    space
    type:"cost_measure"
    space
    value:name
    <CostMeasureAssignmentNode>
  end

  rule cost_assignment
    assignment_operator
    space
    type:"cost"
    space
    value:formula
    <CostAssignmentNode>
  end

  rule assignment_operator
    '+' /
    '-' /
	'='
    <LiteralNode>
  end

  rule conditional
    'if' space word space name space declaration_block
  end

  rule comment
    '#' (!eoc .)* eoc
  end

  rule string
    '"' (!'"' .)+ '"'
  end

  rule eoc
    [\n] / eof
  end

  rule space
    (one_space / comment)+
  end

end
