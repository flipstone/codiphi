grammar Codiphi
  rule codex
    space?
    declaration_list:declaration_list?
    space?
    list:list?
    space? <CodexNode>
  end
  
  rule list
    "list"
    space?
    attribute_block
    <ListNode>
  end
      
  rule permission
    permission_operator 
    space 
    integer 
    space 
    name 
    space 
    <PermissionNode>
  end
  
  rule integer
    [0-9]+
    <IntegerNode>
  end
  
  rule permission_operator
    "demands"
    <LiteralNode>
  end
    
  rule declaration
    word
    space
    name
    space? 
    attribute_block:attribute_block?
    <DeclarationNode>
  end

  rule declaration_list
    declaration
    space? 
    declaration_list* 
    <DeclarationListNode>
  end
  
  rule attribute_block
    "{" 
    space* 
    attribute_list
    space* 
    "}"
    <LiteralNode>
  end

  rule attribute_list
    (permission / attribute) 
    space?
    attribute_list?
    <LiteralNode>
  end

  rule word
    !"list" [a-zA-Z0-9_]+ 
    <LiteralNode>
  end
    
  rule attribute
    word space string
    <LiteralNode>
    /
    word space integer
    <LiteralNode>
    /
    word space word
    <LiteralNode>
  end
  
  rule comment
    '#' (!eoc .)* eoc
  end
  
  rule name
    ':' word 
    <LiteralNode>
  end
  
  rule string
    '"' (!'"' .)+ '"'
    <LiteralNode>
  end
    
  rule eoc
    [\n] / eof
  end
    
  rule eof
    !.
  end
  
  rule space
    ([ \t\n] / comment)+
  end
  
end