grammar Codiphi
  rule codex
    space?
    declaration_list:declaration_list?
    space?
    list:list?
    space? <CodexNode>
  end
  
  rule list
    type:"list"
    space?
    declaration_block
    <ListNode>
  end
      
  rule permission
    permission_operator 
    space 
    integer 
    space 
    name 
    space?
    <PermissionNode>
  end
  
  rule integer
    [0-9]+
    <IntegerNode>
  end
  
  rule permission_operator
    "demands"
    <LiteralNode>
  end
    
  rule declaration
    type:word
    space
    declared:(name / string / integer / word)
    space? 
    declaration_block:declaration_block?
    <DeclarationNode>
  end

  rule declaration_block
    "{" 
    space* 
    declaration_list
    space* 
    "}"
    <DeclarationBlockNode>
  end

  rule declaration_list
    declaration:(permission / declaration)
    z:space?
    declaration_list:declaration_list?
    <DeclarationListNode>
  end

  rule word
    !reserved [a-zA-Z0-9_]+ 
  end
  
  rule reserved
    "list" /
    "demands"
  end
  
  rule comment
    '#' (!eoc .)* eoc
  end
  
  rule name
    ':' word 
    <NameNode>
  end
  
  rule string
    '"' (!'"' .)+ '"'
  end
    
  rule eoc
    [\n] / eof
  end
    
  rule eof
    !.
  end
  
  rule space
    ([ \t\n] / comment)+
  end
  
end